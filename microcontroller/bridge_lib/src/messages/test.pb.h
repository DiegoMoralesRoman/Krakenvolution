/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Led { 
    int32_t state;
} Led;

typedef struct _Person { 
    pb_callback_t name;
    int32_t id;
} Person;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Person_init_default                      {{{NULL}, NULL}, 0}
#define Led_init_default                         {0}
#define Person_init_zero                         {{{NULL}, NULL}, 0}
#define Led_init_zero                            {0}

/* Field tags (for use in manual encoding/decoding) */
#define Led_state_tag                            1
#define Person_name_tag                          1
#define Person_id_tag                            2

/* Struct field encoding specification for nanopb */
#define Person_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, INT32,    id,                2)
#define Person_CALLBACK pb_default_field_callback
#define Person_DEFAULT NULL

#define Led_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    state,             1)
#define Led_CALLBACK NULL
#define Led_DEFAULT NULL

extern const pb_msgdesc_t Person_msg;
extern const pb_msgdesc_t Led_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Person_fields &Person_msg
#define Led_fields &Led_msg

/* Maximum encoded size of messages (where known) */
/* Person_size depends on runtime parameters */
#define Led_size                                 11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
